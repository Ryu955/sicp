#lang sicp

(define (cube x) (* x x x))

(define (p x) (- (* 3 x) (* 4 (cube x))))

(define (sine angle)
   (if (not (> (abs angle) 0.1))
       angle
       (p (sine (/ angle 3.0)))))


(sine 12.15)
; -0.39980345741334

; 置き換えモデルの手続きを追ってみる
; 手続きの本体を取り出して、仮引数を実引数へ置き換える
(if (not (> (abs 12.15) 0.1))
    12.15
    (p (sine (/ 12.15 3.0))))
; if式のpredicateを評価
(not (> (abs 12.15) 0.1))
; -> #f
; alternativeを評価する
(p (sine (/ 12.15 3.0)))
; 部分式を評価
(/ 12.15 3.0)
; -> 4.05
(p (sine 4.05))
; 部分式を評価
(sine 4.05)
(if (not (> (abs 4.05) 0.1))
    4.05
    (p (sine (/ 4.05 3.0))))
; ifのpredicateを評価
(not (> (abs 4.05) 0.1))
; -> #f
; alternativeを評価
; -> (p (sine (/ 4.05 3.0)))
(p (p (sine (/ 4.05 3.0))))
; (/ 4.05 3.0)
; -> 1.3499999999999999
(p (p (sine 1.3499999999999999)))
; (sine 1.3499999999999999) を評価
(if (not (> (abs 1.3499999999999999) 0.1))
    1.3499999999999999
    (p (sine (/ 1.3499999999999999 3.0))))
; ifのpredicateを評価
; (not (> (abs 1.3499999999999999) 0.1))
; -> #f
(p (p (p (sine (/ 1.3499999999999999 3.0)))))
; (/ 1.3499999999999999 3.0)
; -> 0.44999999999999996
(p (p (p (sine 0.44999999999999996))))
; (sine 0.44999999999999996) を評価
(if (not (> (abs 0.44999999999999996) 0.1))
    0.44999999999999996
    (p (sine (/ 0.44999999999999996 3.0))))
; (not (> (abs 0.44999999999999996) 0.1)
; -> #f
(p (p (p (p (sine (/ 0.44999999999999996 3.0))))))
; (/ 0.44999999999999996 3.0)
; -> 0.15
(p (p (p (p (sine 0.15)))))
; (sine 0.15)を評価
(if (not (> (abs 0.15) 0.1))
    0.15
    (p (sine (/ 0.15 3.0))))
; (not (> (abs 0.15) 0.1))
; -> #f
(p (p (p (p (p (sine (/ 0.15 3.0)))))))
; (/ 0.15 3.0)
; -> 0.049999999999999996
(p (p (p (p (p (sine 0.049999999999999996))))))
; (sine 0.049999999999999996) を評価
(if (not (> (abs 0.049999999999999996) 0.1))
    0.049999999999999996
    (p (sine (/ 0.049999999999999996 3.0))))
; (not (> (abs 0.049999999999999996) 0.1))
; -> #t
(p (p (p (p (p 0.049999999999999996)))))









